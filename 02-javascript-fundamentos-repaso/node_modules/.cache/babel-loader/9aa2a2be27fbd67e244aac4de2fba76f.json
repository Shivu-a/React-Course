{"ast":null,"code":"import \"./index.css\"; // funciones en JS\n\nfunction saludar(nombre) {\n  return `Hola, ${nombre}!`;\n} //No hacer una funcion asi!, se puede sobre escribir de esta forma:\n\n\nsaludar = 30;\nconsole.log(saludar); // y este console.log devolvera 30, mostrando que la funcion quedo inutilizada\n//la idea es hacer una funcion adentro de una constante\n\nconst saludo = nombre => {\n  return `Hola ${nombre}!`;\n};\n\nconsole.log(saludo(\"Rimuru\")); // en este caso si sobre escribimos el saludo, lo que pasaria es que nos daria error ya que estamos tratando de re definir una constante\n// tambien podemos acortar esa funcion aun mas!\n\nconst saludo2 = nombre => `Hola ${nombre}!!`;\n\nconsole.log(saludo2(\"Rimuru\")); //para regresar un objeto sin la palabra return y sin las { } hacemos:\n\nconst getuser = () => ({\n  uid: \"asda8989\",\n  username: \"Manas: Ciel\"\n});\n\nconsole.log(getuser()); // ejercicio:\n// function getUsuarioActivo(nombre) {\n//   return {\n//     uid: \"123abc\",\n//     username: nombre,\n//   };\n// }\n// const usuarioActivo = getUsuarioActivo(\"Veldora\");\n// console.log(usuarioActivo);\n\nconst getUsuarioActivo = nombre => ({\n  uid: \"123adb\",\n  username: nombre\n});\n\nconst usuarioActivo = getUsuarioActivo(\"Veldora\");\nconsole.log(usuarioActivo);","map":{"version":3,"names":["saludar","nombre","console","log","saludo","saludo2","getuser","uid","username","getUsuarioActivo","usuarioActivo"],"sources":["C:/Users/Iota/Documents/GitHub/React-Cero-A-Experto/02-javascript-fundamentos-repaso/src/index.js"],"sourcesContent":["import \"./index.css\";\r\n\r\n// funciones en JS\r\n\r\nfunction saludar(nombre) {\r\n  return `Hola, ${nombre}!`;\r\n}\r\n\r\n//No hacer una funcion asi!, se puede sobre escribir de esta forma:\r\n\r\nsaludar = 30;\r\n\r\nconsole.log(saludar);\r\n// y este console.log devolvera 30, mostrando que la funcion quedo inutilizada\r\n\r\n//la idea es hacer una funcion adentro de una constante\r\n\r\nconst saludo = (nombre) => {\r\n  return `Hola ${nombre}!`;\r\n};\r\n\r\nconsole.log(saludo(\"Rimuru\"));\r\n\r\n// en este caso si sobre escribimos el saludo, lo que pasaria es que nos daria error ya que estamos tratando de re definir una constante\r\n\r\n// tambien podemos acortar esa funcion aun mas!\r\n\r\nconst saludo2 = (nombre) => `Hola ${nombre}!!`;\r\n\r\nconsole.log(saludo2(\"Rimuru\"));\r\n\r\n//para regresar un objeto sin la palabra return y sin las { } hacemos:\r\n\r\nconst getuser = () => ({\r\n  uid: \"asda8989\",\r\n  username: \"Manas: Ciel\",\r\n});\r\n\r\nconsole.log(getuser());\r\n\r\n// ejercicio:\r\n\r\n// function getUsuarioActivo(nombre) {\r\n//   return {\r\n//     uid: \"123abc\",\r\n//     username: nombre,\r\n//   };\r\n// }\r\n\r\n// const usuarioActivo = getUsuarioActivo(\"Veldora\");\r\n// console.log(usuarioActivo);\r\n\r\nconst getUsuarioActivo = (nombre) => ({ uid: \"123adb\", username: nombre });\r\n\r\nconst usuarioActivo = getUsuarioActivo(\"Veldora\");\r\nconsole.log(usuarioActivo);\r\n"],"mappings":"AAAA,OAAO,aAAP,C,CAEA;;AAEA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;EACvB,OAAQ,SAAQA,MAAO,GAAvB;AACD,C,CAED;;;AAEAD,OAAO,GAAG,EAAV;AAEAE,OAAO,CAACC,GAAR,CAAYH,OAAZ,E,CACA;AAEA;;AAEA,MAAMI,MAAM,GAAIH,MAAD,IAAY;EACzB,OAAQ,QAAOA,MAAO,GAAtB;AACD,CAFD;;AAIAC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAAC,QAAD,CAAlB,E,CAEA;AAEA;;AAEA,MAAMC,OAAO,GAAIJ,MAAD,IAAa,QAAOA,MAAO,IAA3C;;AAEAC,OAAO,CAACC,GAAR,CAAYE,OAAO,CAAC,QAAD,CAAnB,E,CAEA;;AAEA,MAAMC,OAAO,GAAG,OAAO;EACrBC,GAAG,EAAE,UADgB;EAErBC,QAAQ,EAAE;AAFW,CAAP,CAAhB;;AAKAN,OAAO,CAACC,GAAR,CAAYG,OAAO,EAAnB,E,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMG,gBAAgB,GAAIR,MAAD,KAAa;EAAEM,GAAG,EAAE,QAAP;EAAiBC,QAAQ,EAAEP;AAA3B,CAAb,CAAzB;;AAEA,MAAMS,aAAa,GAAGD,gBAAgB,CAAC,SAAD,CAAtC;AACAP,OAAO,CAACC,GAAR,CAAYO,aAAZ"},"metadata":{},"sourceType":"module"}